<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.5.3">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/andresfuentes/ToDos.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.SCMTrigger>
      <spec>0 0 * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>sed -i &apos;s/{jenkins-project}/todo-nightly/&apos; docker-compose.yml
sed -i &apos;s/{password}/tresm1104/&apos; docker-compose.yml
sed -i &apos;s/{pwc-password}/pwc123/&apos; docker-compose.yml
sed -i &apos;s/{hp9-password}/1qaz2wsx/&apos; docker-compose.yml
sed -i &apos;s/{api-key}/l7xx0146fbb0ac8f4874af1f1cd29a0faad0/&apos; docker-compose.yml
sed -i &apos;s/{api-secret}/4c74e71cd74243b8a3d63bc96e602126/&apos; docker-compose.yml
sed -i &apos;s/{version}/latest/&apos; docker-compose.yml </command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>docker-compose run cicd compile</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>docker-compose run cicd test</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>docker-compose run cicd scan</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>docker-compose run cicd package</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>docker-compose run cicd deploy</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>target/*.jar, target/*.war</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.junit.JUnitResultArchiver plugin="junit@1.15">
      <testResults>target/surefire-reports/*.xml</testResults>
      <keepLongStdio>false</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <allowEmptyResults>false</allowEmptyResults>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.plugins.jacoco.JacocoPublisher plugin="jacoco@2.0.1">
      <execPattern>**/**.exec</execPattern>
      <classPattern>**/classes</classPattern>
      <sourcePattern>**/src/main/java</sourcePattern>
      <inclusionPattern></inclusionPattern>
      <exclusionPattern></exclusionPattern>
      <minimumInstructionCoverage>0</minimumInstructionCoverage>
      <minimumBranchCoverage>0</minimumBranchCoverage>
      <minimumComplexityCoverage>0</minimumComplexityCoverage>
      <minimumLineCoverage>0</minimumLineCoverage>
      <minimumMethodCoverage>0</minimumMethodCoverage>
      <minimumClassCoverage>0</minimumClassCoverage>
      <maximumInstructionCoverage>0</maximumInstructionCoverage>
      <maximumBranchCoverage>0</maximumBranchCoverage>
      <maximumComplexityCoverage>0</maximumComplexityCoverage>
      <maximumLineCoverage>0</maximumLineCoverage>
      <maximumMethodCoverage>0</maximumMethodCoverage>
      <maximumClassCoverage>0</maximumClassCoverage>
      <changeBuildStatus>false</changeBuildStatus>
    </hudson.plugins.jacoco.JacocoPublisher>
  </publishers>
  <buildWrappers/>
</project>
