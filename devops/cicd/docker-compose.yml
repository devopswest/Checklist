version: '2'
services:
    base:
        environment:
            - 'APP_NAME=[APP]'
            - 'DEPLOY_TO_SERVER=dev'
            - 'DOCKER_TARGET=tcp://[prefix]-swarm-master.eastus.cloudapp.azure.com:4243'
            - 'DOCKER_USER={docker-user}'
            - 'DOCKER_PASSWORD={docker-app-key}'

            - 'GIT_URL=https://github.com/[user]/[repo].git'
            - 'SONAR_SERVER=http://[prefix]-builder.eastus.cloudapp.azure.com:9000'
            - 'HEALTH_CHECK=http://[prefix]-swarm-master.eastus.cloudapp.azure.com:8080/management/health'

            - 'API_KEY={api-key}'
            - 'API_KEY_SECRET={api-secret}'

            - 'RFC_CREATE_IMPLEMENTATION_API_URL=http://adc-builder.eastus.cloudapp.azure.com:9993/api/rfc/changeImplementation'
            - 'RFC_EVALUATION_CLOSED_API_URL=http://adc-builder.eastus.cloudapp.azure.com:9993/api/rfc/closeWithEvaluation'

            - 'briefDescription=Deployment of CMA BSL component in BSL Stage environment'
            - 'category=Application Infrastructure Management'
            - 'subcategory=US Lombardi'
            - 'assignmentGroup=US IT APP SPT - ENVOY'
            - 'initiatedBy=ssingh145'
            - 'changeCoordinator=rmaheshwar008'
            - 'reason=business'
            - 'service=Envoy'
            - 'requestedEndDate=2016-07-18T04:12:32.065Z'
            - 'backoutComplexity=Low'
            - 'impact=3'
            - 'urgency=3'
            - 'riskAssessment=3'
            - 'description="This RFC has been created for the purpose of deploying CMA BSL component on BSL Stage environment.","The deployment is required to deploy the latest CMA BSL code on Stage environment so that instance migration testing can be done on Stage environment for next CMA release."'
            - 'affectedCI="matlkgsswwhs011","matlkgsswwhs012"'
            - 'lifeCycleStatus=Live'
            - 'environment=Stage'
            - 'plan=Test deployment plan.'
            - 'backoutPlan=Test backout plan.'
            - 'plannedStartDate=2016-07-17T18:12:32.065Z'
            - 'plannedEndDate=2016-07-18T03:12:32.065Z'
            - 'changeImplementer=ssingh145'
            - 'template=Standard RFC Template'
            - 'riskAssessmentMitigation="Sample Risk Assessment and Mitigation comments."'

            - 'startDate=2016-07-17T18:15:00.000Z'
            - 'endDate=2016-07-18T02:00:00.000Z'
            - 'closureComments="RFC Implemented Successfully."'

    cicd:
        extends:
           service: base

        build:
            context: ../../
            dockerfile: devops/cicd/Dockerfile-build

        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
            #- "/var/data/jenkins/workspace/{jenkins-project}/target:/var/app/Checklist/target"
            - "$PWD:/var/app"
            - "$HOME/.m2:/root/.m2"
            #- "./volumen:/var/app/Checklist"

    compile:
        extends:
           service: cicd

        command: >
            bash -c '
            echo "***************************************" &&
            echo "***         COMPILING CODE          ***" &&
            echo "***************************************" &&
            cd /var/app/Checklist &&
            git checkout *.sh &&
            git pull &&
            apt-get clean &&
            mvn compile
            '

    scan:
        extends:
           service: cicd

        command: >
            bash -c '
            echo "***************************************" &&
            echo "***          SCANNING CODE          ***" &&
            echo "***            1. checkstyle        ***" &&
            echo "***            2. lint              ***" &&
            echo "***            3. findbugs          ***" &&
            echo "***            4. sonarq            ***" &&
            echo "***            5. fortify           ***" &&
            echo "***************************************" &&
            cd /var/app/Checklist &&
            git checkout *.sh &&
            git pull &&
            apt-get clean &&
            mvn sonar:sonar
            '

    test:
        extends:
           service: cicd

        command: >
            bash -c '
            echo "***************************************" &&
            echo "***           TESTING CODE          ***" &&
            echo "***            1. junit             ***" &&
            echo "***            2. karma             ***" &&
            echo "***            3. cucumber          ***" &&
            echo "***            4. protractor        ***" &&
            echo "***************************************" &&
            cd /var/app/Checklist &&
            git checkout *.sh &&
            git pull &&
            apt-get clean &&
            mvn test
            '

    static-analisys:
        extends:
           service: cicd

        command: >
            bash -c '
            echo "***************************************" &&
            echo "***         DEEP CODE ANALISYS      ***" &&
            echo "***            1. findbugs          ***" &&
            echo "***            2. checkstyle        ***" &&
            echo "***            3. pmd               ***" &&
            echo "***            4. fortify           ***" &&
            echo "***************************************" &&
            cd /var/app/Checklist &&
            git checkout *.sh &&
            git pull &&
            apt-get clean &&
            npm update &&
            gradle findbugsMain checkstyleMain checkThePMD fortifyReport
            '

    package:
        extends:
           service: cicd

        command: >
            bash -c '
            echo "***************************************" &&
            echo "***         PACKAGING CODE          ***" &&
            echo "***            1. create war        ***" &&
            echo "***            2. version war       ***" &&
            echo "***            3. create image      ***" &&
            echo "***            4. push image        ***" &&
            echo "***************************************" &&
            cd /var/app/Checklist &&
            git checkout *.sh &&
            git pull &&
            chmod +x *.sh &&
            chmod +x cicd/*.sh &&
            apt-get clean &&
            mvn -Dmaven.test.skip=true package &&
            ./devops/cicd/package.sh
            '


    deploy:
        extends:
           service: cicd

        command: >
            bash -c '
            echo "***************************************" &&
            echo "***           DEPLOY APP            ***" &&
            echo "***            1. create RFC        ***" &&
            echo "***            2. pull image        ***" &&
            echo "***            3. deploy to swarm   ***" &&
            echo "***            4. healthcheck       ***" &&
            echo "***            5. closr RFC|Revert  ***" &&
            echo "***************************************" &&
            cd /var/app/Checklist &&
            git checkout *.sh &&
            git pull &&
            chmod +x *.sh &&
            chmod +x cicd/*.sh &&
            ./devops/cicd/deploy.sh
            '


    develop:
        extends:
           service: deploy
        environment:
            - 'DOCKER_TARGET=tcp://[prefix]-swarm-master.eastus.cloudapp.azure.com:4243'

    qa:
        extends:
           service: deploy

        environment:
            - 'DOCKER_TARGET=tcp://[prefix]-swarm-master.eastus.cloudapp.azure.com:4243'

    uat:
        extends:
           service: deploy

        environment:
            - 'DOCKER_TARGET=tcp://[prefix]-swarm-master.eastus.cloudapp.azure.com:4243'

    master:
        extends:
           service: deploy
        environment:
            - 'DOCKER_TARGET=tcp://[prefix]-swarm-master.eastus.cloudapp.azure.com:4243'




